{"version":3,"sources":["cryptomonedas.png","components/Error.js","hooks/useMoneda.js","hooks/useCryptoMoneda.js","components/Formulario.js","components/Cotizacion.js","components/Spinner.js","App.js","index.js"],"names":["module","exports","MensajeError","styled","p","Error","mensaje","Label","label","Select","select","useMoneda","stateInicial","opciones","useState","state","actualizarState","htmlFor","onChange","e","target","value","map","opcion","key","codigo","nombre","useCryptoMoneda","CoinInfo","Id","Name","FullName","Boton","input","Formulario","guardarMoneda","guardarCriptoMoneda","listadocripto","guardarCriptomonedas","error","guardarError","moneda","SelectMonedas","cryptomoneda","SelectCrypto","useEffect","a","axios","get","resultado","data","Data","consultarAPI","onSubmit","preventDefault","type","ResultadoDiv","div","Info","Precio","Cotizacion","Object","keys","length","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","className","Contenedor","Imagen","img","Heading","h1","App","criptomoneda","guardarResultado","cargando","guardarCargando","URL","setTimeout","DISPLAY","cotizarCriptomoneda","componente","src","imagen","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfa863a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cryptomonedas.96e45d69.png\";","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst MensajeError = styled.p`\r\n  background-color: #b7322c;\r\n  padding: 1rem;\r\n  color: #fff;\r\n  font-size: 30px;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  font-family: \"Bebas Neue\", cursive;\r\n`;\r\n\r\nconst Error = ({ mensaje }) => {\r\n  return <MensajeError>{mensaje}</MensajeError>;\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Label = styled.label`\r\n  font-family: \"Bebas Neue\", cursive;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  font-size: 2.4rem;\r\n  margin-top: 2rem;\r\n  display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  display: block;\r\n  padding: 1rem;\r\n  -webkit-appearance: none;\r\n  border-radius: 10px;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst useMoneda = (label, stateInicial, opciones) => {\r\n  //state de nuestro custom hook\r\n  const [state, actualizarState] = useState(stateInicial);\r\n  const Seleccionar = () => (\r\n    <>\r\n      <Label htmlFor=\"\">{label}</Label>\r\n      <Select onChange={(e) => actualizarState(e.target.value)} value={state}>\r\n        <option value=\"\">-- Seleccione --</option>\r\n        {opciones.map((opcion) => (\r\n          <option key={opcion.codigo} value={opcion.codigo}>\r\n            {opcion.nombre}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </>\r\n  );\r\n\r\n  //retornar state, interfaz y fn que modifica el state\r\n  return [state, Seleccionar, actualizarState];\r\n};\r\n\r\nexport default useMoneda;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Label = styled.label`\r\n  font-family: \"Bebas Neue\", cursive;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  font-size: 2.4rem;\r\n  margin-top: 2rem;\r\n  display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  display: block;\r\n  padding: 1rem;\r\n  -webkit-appearance: none;\r\n  border-radius: 10px;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst useCryptoMoneda = (label, stateInicial, opciones) => {\r\n  //state de nuestro custom hook\r\n  const [state, actualizarState] = useState(stateInicial);\r\n  const SelectCripto = () => (\r\n    <>\r\n      <Label htmlFor=\"\">{label}</Label>\r\n      <Select onChange={(e) => actualizarState(e.target.value)} value={state}>\r\n        <option value=\"\">-- Seleccione --</option>\r\n        {opciones.map((opcion) => (\r\n          <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>\r\n            {opcion.CoinInfo.FullName}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </>\r\n  );\r\n\r\n  //retornar state, interfaz y fn que modifica el state\r\n  return [state, SelectCripto, actualizarState];\r\n};\r\n\r\nexport default useCryptoMoneda;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport Error from './Error'\r\nimport useMoneda from \"../hooks/useMoneda\";\r\nimport useCryptoMoneda from \"../hooks/useCryptoMoneda\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst Boton = styled.input`\r\n  margin-top: 20px;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  padding: 10px;\r\n  background-color: #66a2fe;\r\n  border: none;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  color: #fff;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: #326ac0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Formulario = ({guardarMoneda, guardarCriptoMoneda}) => {\r\n  //state del listado de criptomonedas\r\n  const [listadocripto, guardarCriptomonedas] = useState([]);\r\n\r\n  //state de los errores\r\n  const [error, guardarError] = useState(false);\r\n  const MONEDAS = [\r\n    {\r\n      codigo: \"USD\",\r\n      nombre: \"Dolar de Estados Unidos\",\r\n    },\r\n    {\r\n      codigo: \"MXN\",\r\n      nombre: \"Peso Mexicano\",\r\n    },\r\n    {\r\n      codigo: \"EUR\",\r\n      nombre: \"Euro\",\r\n    },\r\n    {\r\n      codigo: \"GBP\",\r\n      nombre: \"Libra Esterlina\",\r\n    },\r\n  ];\r\n\r\n  //utilizamos useMoneda\r\n  const [moneda, SelectMonedas] = useMoneda(\"Elige tu moneda\", \"\", MONEDAS);\r\n\r\n  //utilizamos useCryptoMoneda\r\n  const [cryptomoneda, SelectCrypto] = useCryptoMoneda(\r\n    \"Elige tu CryptoMoneda\",\r\n    \"\",\r\n    listadocripto\r\n  );\r\n\r\n  //ejecutar llamada a la API\r\n  useEffect(() => {\r\n    const consultarAPI = async () => {\r\n      const URL =\r\n        \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\";\r\n      const resultado = await axios.get(URL);\r\n      guardarCriptomonedas(resultado.data.Data);\r\n    };\r\n    consultarAPI();\r\n  }, []);\r\n\r\n  //cuando el usuario hace submit\r\n  const cotizarMoneda = (e) => {\r\n    e.preventDefault();\r\n\r\n    //validar si ambos campos estan llenos\r\n    if (moneda === \"\" || cryptomoneda === \"\") {\r\n      guardarError(true);\r\n      return;\r\n    }\r\n\r\n    //pasar los datos al componente principal\r\n    guardarError(false);\r\n    guardarMoneda(moneda)\r\n    guardarCriptoMoneda(cryptomoneda)\r\n  };\r\n  return (\r\n    <form onSubmit={cotizarMoneda}>\r\n      {error ? <Error mensaje=\"Todos los campos son obligatorios\"></Error> : null}\r\n      <SelectMonedas />\r\n      <SelectCrypto />\r\n      <Boton type=\"submit\" value=\"Calcular\"></Boton>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst ResultadoDiv = styled.div`\r\n  color: #fff;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n`;\r\n\r\nconst Info = styled.p`\r\n  font-size: 18px;\r\n  span {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Precio = styled.p`\r\n  font-size: 30px;\r\n  span {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Cotizacion = ({ resultado }) => {\r\n  if (Object.keys(resultado).length === 0) return null;\r\n\r\n  return (\r\n    <ResultadoDiv>\r\n      <Precio>\r\n        El precio es: <span>{resultado.PRICE}</span>\r\n      </Precio>\r\n      <Info>\r\n        El precio más alto del dia: <span>{resultado.HIGHDAY}</span>\r\n      </Info>\r\n      <Info>\r\n        El precio más bajo del dia: <span>{resultado.LOWDAY}</span>\r\n      </Info>\r\n      <Info>\r\n        Variación últimas 24 horas: <span>{resultado.CHANGEPCT24HOUR}</span>\r\n      </Info>\r\n      <Info>\r\n        Última actualización: <span>{resultado.LASTUPDATE}</span>\r\n      </Info>\r\n    </ResultadoDiv>\r\n  );\r\n};\r\n\r\nexport default Cotizacion;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"sk-chase\">\r\n      <div className=\"sk-chase-dot\"></div>\r\n      <div className=\"sk-chase-dot\"></div>\r\n      <div className=\"sk-chase-dot\"></div>\r\n      <div className=\"sk-chase-dot\"></div>\r\n      <div className=\"sk-chase-dot\"></div>\r\n      <div className=\"sk-chase-dot\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport axios from \"axios\";\nimport imagen from \"./cryptomonedas.png\";\nimport Formulario from \"./components/Formulario\";\nimport Cotizacion from \"./components/Cotizacion\";\nimport Spinner from \"./components/Spinner\";\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width: 992px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 2rem;\n  }\n`;\n\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\n\nconst Heading = styled.h1`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-bottom: 50px;\n  margin-top: 80px;\n\n  &::after {\n    content: \"\";\n    width: 100px;\n    height: 6px;\n    background-color: #66a2fe;\n    display: block;\n  }\n`;\n\nfunction App() {\n  //state de las monedas\n  const [moneda, guardarMoneda] = useState(\"\");\n  const [criptomoneda, guardarCriptoMoneda] = useState(\"\");\n  const [resultado, guardarResultado] = useState({});\n  const [cargando, guardarCargando] = useState(false);\n\n  useEffect(() => {\n    const cotizarCriptomoneda = async () => {\n      //evitamos la ejecución la primera vez\n      if (moneda === \"\") return;\n\n      //consultar la api para obtener la cotización\n      const URL = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n\n      const resultado = await axios.get(URL);\n\n      //mostrar el spinner\n      guardarCargando(true);\n\n      //ocular el spinner y mostrar el resultado\n      setTimeout(() => {\n        //cambiar el estado de cargando\n        guardarCargando(false);\n        //guardar cotización\n        guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n      }, 3000);\n    };\n\n    cotizarCriptomoneda();\n  }, [moneda, criptomoneda]);\n\n  //mostrar spinner o resultado\n  const componente = (cargando) ? <Spinner /> : <Cotizacion resultado={resultado}/>\n  return (\n    <Contenedor>\n      <div>\n        <Imagen src={imagen} alt=\"imagen cripto\" />\n      </div>\n      <div>\n        <Heading>Cotiza cryptomonedas al instante</Heading>\n        <Formulario\n          guardarMoneda={guardarMoneda}\n          guardarCriptoMoneda={guardarCriptoMoneda}\n        />\n        {componente}\n      </div>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}